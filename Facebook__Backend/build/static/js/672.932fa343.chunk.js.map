{"version":3,"file":"static/js/672.932fa343.chunk.js","mappings":"mIAAO,IAAMA,EAAwB,SAACC,EAAKC,GACzC,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,EACjD,C,6IC2GD,UAzFoB,SAAC,GAAuC,IAArCK,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,aACtC,GAA0CC,EAAAA,EAAAA,KAAlCC,EAAR,EAAQA,aAAcC,EAAtB,EAAsBA,gBAEtB,EAAoCC,EAAAA,WAApC,eAAmBC,GAAnB,WAEA,GACEJ,EAAAA,EAAAA,KADoBK,GAAtB,EAAQC,aAAR,EAAsBD,iBAAuBE,GAA7C,EAAuCC,KAAvC,EAA6CD,OAAOE,EAApD,EAAoDA,SAAUC,EAA9D,EAA8DA,WAY9D,OATAP,EAAAA,WAAgB,WACdC,EAAcO,aAAaC,QAAQ,UACnCC,EAAAA,EAAAA,IACEJ,EACAJ,EACA,uCAGH,GAAE,CAACK,KAEF,UAAC,WAAD,YACE,qBAASI,UAAU,qEAAnB,WACE,SAAC,IAAD,CAAsBhB,MAAOA,EAAOC,aAAcA,KAClD,+BACE,eAAIe,UAAU,oCAEL,UAAVhB,IACC,oBAASgB,UAAU,8EAAnB,SACG,CACC,CACEhB,MAAO,SAET,CACEA,MAAO,gBAETiB,KAAI,WAAYC,GAAZ,IAAGlB,EAAH,EAAGA,MAAH,OACJ,gBAAKgB,UAAU,mCAAf,UACE,eAAIA,UAAU,sCAAd,SAAqDhB,KADAkB,EADnD,UAQZ,qBAASF,UAAU,iHAAnB,WACE,oBAASA,UAAU,iFAAnB,SACGjB,KAEH,oBAASiB,UAAU,kBAAnB,SACGP,EAAMQ,KAAI,SAACE,EAAMD,GAAP,OACT,oBACEF,UAAU,uIAEVI,QAAS,WACPhB,GAAgB,GAChBD,GAAa,EACd,EANH,WAQE,gBACEkB,KAAKC,EAAAA,EAAAA,GAAM,OAACH,QAAD,IAACA,OAAD,EAACA,EAAMI,SAASC,aAAaC,OACxCC,IAAI,SACJV,UAAU,iFAEZ,qBAASA,UAAU,2CAAnB,WACE,eAAIA,UAAU,iEAAd,gBACGG,QADH,IACGA,OADH,EACGA,EAAMI,SAASI,YAElB,qBAASX,UAAU,+DAAnB,WACE,eAAIA,UAAU,UAAd,0BACMG,QADN,IACMA,OADN,EACMA,EAAMS,cAAc,GAAGC,QAAQC,UACjC,GACArC,EAAAA,EAAAA,GAAsB,EAAG,KAH7B,UAMA,cAAGuB,UAAU,UAAb,mBACMe,IAAM,OAACZ,QAAD,IAACA,OAAD,EAACA,EAAMa,YAAYC,UAAUH,UAAU,EAAG,GADtD,eAtBCZ,EAHE,UAkCf,oBAASF,UAAU,qHAAnB,UACE,eAAIA,UAAU,+CAAd,sCAMP,C,4CCnFD,IAtB6B,SAAC,GAAkC,IAAD,IAA/Bf,aAAAA,OAA+B,MAAhB,GAAgB,EAAZD,EAAY,EAAZA,MACjD,OACE,qBAASgB,UAAU,mEAAnB,WACE,eAAIA,UAAU,uDAAd,SACGhB,KAEH,oBAASgB,UAAU,wCAAnB,SACGf,EAAagB,KAAI,SAACiB,EAAQC,GAAT,OAChB,oBACEnB,UAAU,oHADZ,UAIE,cAAGA,UAAU,6CAAb,SACGkB,EAAOE,QAHLD,EAHS,QAazB,C","sources":["Functions/utilities/random..js","Pages/Messages/MessageRoot.js","Pages/Messages/components/SoftMassagePanelview/SoftMassagePanelview.jsx"],"sourcesContent":["export const randomNumberGenerator = (min, max) => {\r\n  return Math.round(Math.random() * (max - min) + min)\r\n}\r\n","import * as React from 'react'\r\n\r\n//import moment module\r\nimport moment from 'moment'\r\n\r\n//import constants\r\nimport { comments } from '../../utils/constants'\r\n\r\n//import utilitis function\r\nimport { randomNumberGenerator } from '../../Functions/utilities/random.'\r\n\r\n//import useglobal context\r\nimport { useGlobalContext } from '../../Hooks/context/UseContext'\r\n\r\n//import custom react icons\r\nimport SoftMassagePanelview from './components/SoftMassagePanelview/SoftMassagePanelview'\r\nimport axios from 'axios'\r\nimport { getAllChat } from '../../Functions/actions/external'\r\nimport { urlFor } from '../../utils/client'\r\n\r\nconst MessageRoot = ({ children, title, actionButton }) => {\r\n  const { setChatState, setMessageState } = useGlobalContext()\r\n\r\n  const [loggedUser, setLoggedUser] = React.useState()\r\n\r\n  const { selectedChat, setSelectedChat, user, chats, setChats, fetchAgain } =\r\n    useGlobalContext()\r\n\r\n  React.useEffect(() => {\r\n    setLoggedUser(localStorage.getItem('user'))\r\n    getAllChat(\r\n      setChats,\r\n      setSelectedChat,\r\n      '4bb148f8-e2ff-4953-a6a5-c65fc28d5d63'\r\n    )\r\n    // eslint-disable-next-line\r\n  }, [fetchAgain])\r\n  return (\r\n    <React.Fragment>\r\n      <section className='flex flex-col gap-0 md:gap-2 rounded-t-lg dark:bg-dark400 bg-white'>\r\n        <SoftMassagePanelview title={title} actionButton={actionButton} />\r\n        <>\r\n          <hr className='mdsm:hidden dark:border-bd500' />\r\n        </>\r\n        {title === 'Chats' && (\r\n          <article className='w-full flex flex-row flex-nowrap justify-start items-center gap-4 pl-2 mt-2'>\r\n            {[\r\n              {\r\n                title: 'Inbox',\r\n              },\r\n              {\r\n                title: 'Communities',\r\n              },\r\n            ].map(({ title }, index) => (\r\n              <div className='px-2 py-1 rounded bg-[#0c449f24]' key={index}>\r\n                <h5 className='text-blue-600 text-base font-medium'>{title}</h5>\r\n              </div>\r\n            ))}\r\n          </article>\r\n        )}\r\n      </section>\r\n      <section className='dark:bg-dark500 bg-white max-h-full md:max-h-[380px] gap-3 w-full overflow-auto home_scroll  md:mt-0 mdsm:pb-0'>\r\n        <section className='relative w-full flex flex-row justify-center items-center dark:bg-dark400 mb-2'>\r\n          {children}\r\n        </section>\r\n        <section className='dark:bg-dark400'>\r\n          {chats.map((chat, index) => (\r\n            <button\r\n              className='w-full flex flex-row gap-3 items-center cursor-pointer dark:hover:bg-dark300 hover:bg-slate-200 px-2 py-1.5 mt-0.5 mb-0.5 rounded-md'\r\n              key={index}\r\n              onClick={() => {\r\n                setMessageState(false)\r\n                setChatState(true)\r\n              }}\r\n            >\r\n              <img\r\n                src={urlFor(chat?.recivers.profileImage.asset)}\r\n                alt='sender'\r\n                className='w-16 h-16 mdsm:w-10 mdsm:h-10 rounded-full object-cover ring-2 ring-dark300'\r\n              />\r\n              <article className='flex flex-col justify-center items-start'>\r\n                <h3 className='capitalize text-black dark:text-thdark500  text-lg font-medium'>\r\n                  {chat?.recivers.userName}\r\n                </h3>\r\n                <article className='flex flex-row items-center w-full gap-2 dark:text-thlight500'>\r\n                  <h3 className='text-sm'>\r\n                    {`${chat?.latestMessage[0].subject.substring(\r\n                      0,\r\n                      randomNumberGenerator(9, 21)\r\n                    )}...`}\r\n                  </h3>\r\n                  <p className='text-sm'>\r\n                    {`${moment(chat?._updatedAt).fromNow().substring(0, 5)}.`}\r\n                  </p>\r\n                </article>\r\n              </article>\r\n            </button>\r\n          ))}\r\n        </section>\r\n      </section>\r\n      <section className='hidden mdsm:flex justify-center items-center border-t-[1px] dark:border-bd500 border-t-slate-300 p-3 rounded-b-lg '>\r\n        <h4 className='text-blue-600 cursor-pointer hover:underline'>\r\n          See all in Messenger\r\n        </h4>\r\n      </section>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default MessageRoot\r\n","import React from 'react'\r\n\r\nconst SoftMassagePanelview = ({ actionButton = [], title }) => {\r\n  return (\r\n    <section className='flex flex-row w-full justify-between items-center p-1.5 mdxs:p-3'>\r\n      <h3 className='text-2xl font-bold text-gray-900 dark:text-thdark500'>\r\n        {title}\r\n      </h3>\r\n      <article className='flex flex-row gap-2 items-center pl-1'>\r\n        {actionButton.map((option, i) => (\r\n          <article\r\n            className='rounded-full p-2 dark:bg-dark300 bg-light300 md:bg-inherit dark:hover:bg-dark300 hover:bg-light300 cursor-pointer'\r\n            key={i}\r\n          >\r\n            <i className='text-lg text-gray-600 dark:text-thlight500'>\r\n              {option.icon}\r\n            </i>\r\n          </article>\r\n        ))}\r\n      </article>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SoftMassagePanelview\r\n"],"names":["randomNumberGenerator","min","max","Math","round","random","children","title","actionButton","useGlobalContext","setChatState","setMessageState","React","setLoggedUser","setSelectedChat","selectedChat","chats","user","setChats","fetchAgain","localStorage","getItem","getAllChat","className","map","index","chat","onClick","src","urlFor","recivers","profileImage","asset","alt","userName","latestMessage","subject","substring","moment","_updatedAt","fromNow","option","i","icon"],"sourceRoot":""}